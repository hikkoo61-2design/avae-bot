ayvae-bot/
│── package.json
│── server.js
│── .env.example

  "name": "ayvae-bot",
  "version": "1.0.0",
  "main": "server.js",
  "type": "module",
  "scripts": {
    "start": "node server.js"
  },
  "dependencies": {
    "express": "^4.19.2",
    "node-fetch": "^3.3.2",
    "openai": "^4.58.1",
    "body-parser": "^1.20.2",
    "dotenv": "^16.4.5",
    "cors": "^2.8.5"
  }
}
import express from "express";
import fetch from "node-fetch";
import bodyParser from "body-parser";
import dotenv from "dotenv";
import OpenAI from "openai";
import cors from "cors";

dotenv.config();
const app = express();
app.use(bodyParser.json());
app.use(cors());

// Keys vanuit Render (.env)
const SHOPIFY_API_KEY = process.env.SHOPIFY_API_KEY || "";
const SHOPIFY_API_PASS = process.env.SHOPIFY_API_PASS || "";
const SHOPIFY_STORE = process.env.SHOPIFY_STORE || "";
const INVENTORY_ITEM_ID = process.env.INVENTORY_ITEM_ID || "";
const OPENAI_API_KEY = process.env.OPENAI_API_KEY || "";
const MODEL = process.env.OPENAI_MODEL || "gpt-4o-mini";

const openai = new OpenAI({ apiKey: OPENAI_API_KEY });

// Shopify voorraad
async function getInventory(inventoryItemId) {
  if (!inventoryItemId) return null;
  const url = `https://${SHOPIFY_API_KEY}:${SHOPIFY_API_PASS}@${SHOPIFY_STORE}/admin/api/2025-01/inventory_levels.json?inventory_item_ids=${inventoryItemId}`;
  const res = await fetch(url);
  if (!res.ok) return null;
  const data = await res.json();
  return data?.inventory_levels?.[0]?.available ?? null;
}

// Shopify bestelling
async function getOrderStatus(orderId) {
  const url = `https://${SHOPIFY_API_KEY}:${SHOPIFY_API_PASS}@${SHOPIFY_STORE}/admin/api/2025-01/orders/${orderId}.json`;
  const res = await fetch(url);
  if (!res.ok) return null;
  const data = await res.json();
  return data?.order?.fulfillment_status ?? "onbekend";
}

// Routes
app.get("/", (req, res) => {
  res.send("AYVAE bot draait ✅");
});

app.get("/widget", (req, res) => {
  res.send(`
    <!doctype html>
    <html>
    <body>
      <h3>AYVAE Assistent</h3>
      <form onsubmit="sendMessage(); return false;">
        <input id="msg" placeholder="Typ hier..."/>
        <button type="submit">Stuur</button>
      </form>
      <div id="resp"></div>
      <script>
        async function sendMessage() {
          const inp = document.getElementById('msg');
          const res = await fetch('/chat', {
            method:'POST',
            headers:{'Content-Type':'application/json'},
            body: JSON.stringify({message: inp.value})
          });
          const data = await res.json();
          document.getElementById('resp').innerText = data.reply;
        }
      </script>
    </body>
    </html>
  `);
});

app.post("/chat", async (req, res) => {
  const { message } = req.body;
  let context = "";

  if (message.toLowerCase().includes("voorraad")) {
    const voorraad = await getInventory(INVENTORY_ITEM_ID);
    if (voorraad !== null) {
      context = `Voor dit product zijn er nog ${voorraad} stuks beschikbaar.`;
    }
  }

  if (message.toLowerCase().includes("bestelling")) {
    const match = message.match(/\d+/);
    if (match) {
      const status = await getOrderStatus(match[0]);
      context = `De status van bestelling ${match[0]} is: ${status}`;
    }
  }

  const completion = await openai.chat.completions.create({
    model: MODEL,
    messages: [
      { role: "system", content: "Jij bent een luxe klantenservice assistent voor AYVAE, stijlvol en verzorgd als Rituals." },
      { role: "user", content: message },
      { role: "assistant", content: context }
    ]
  });

  res.json({ reply: completion.choices[0].message.content });
});

const port = process.env.PORT || 3000;
app.listen(port, () => {
  console.log(`AYVAE bot running on port ${port}`);
});
# OpenAI
OPENAI_API_KEY=your_openai_api_key
OPENAI_MODEL=gpt-4o-mini

# Shopify
SHOPIFY_API_KEY=your_shopify_api_key
SHOPIFY_API_PASS=your_shopify_api_password
SHOPIFY_STORE=yourshopname.myshopify.com

# Optioneel
INVENTORY_ITEM_ID=
